---
# tasks file for mssql
- name: add yum repository packages-microsoft-com-mssql-server-2017
  yum_repository:
    name: "{{ item.name }}"
    baseurl: "{{ item.baseurl }}"
    gpgkey: "{{ mssql_gpgkey }}"
    gpgcheck: yes
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "Red Hat Enterprise Linux"
  with_items: "{{ mssql_rhel_repositories }}"

- name: add zypper repository packages-microsoft-com-mssql-server-2017
  zypper_repository:
    name: "{{ item.name }}"
    repo: "{{ item.repo }}"
    auto_import_keys: yes
  when:
    - ansible_distribution == "openSUSE Leap"
  with_items: "{{ mssql_opensuse_repositories }}"

- name: add apt repository packages-microsoft-com-mssql-server-2017
  apt_repository:
    repo: deb [arch=amd64] "{{ item.repo }}" xenial main
  when:
    - ansible_distribution == "Ubuntu"
  with_items: "{{ mssql_ubuntu_repositories }}"

- name: add apt key
  apt_key:
    url: "{{ mssql_gpgkey }}"
  when:
    - ansible_distribution == "Ubuntu"

- name: install software in mssql_packages
  package:
    name: "{{ item.name }}"
  with_items: "{{ mssql_packages }}"
  environment:
    ACCEPT_EULA: Y

- name: configure mssql-server using mssql-conf
  command: /opt/mssql/bin/mssql-conf setup
  environment:
    ACCEPT_EULA: Y
    MSSQL_SA_PASSWORD: "{{ mssql_sa_password }}"
    MSSQL_PID: "{{ mssql_pid }}"
  args:
    creates: /var/opt/mssql/mssql.conf
  register: mssql_setup
  failed_when: "'Setup has completed successfully.' not in mssql_setup.stdout"

- name: start and enable mssql-server
  service:
    name: mssql-server
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker"

- name: install pymssql
  pip:
    name: pymssql
